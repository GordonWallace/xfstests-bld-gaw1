#!/bin/bash
#
# gce-kexec -- this script handles switching to the kernel to be
# tested (using kexec), as well as those things that should be done as
# soon as possible (such as transferring the sendgrid password to a
# config file and erasing it)

. /usr/local/lib/gce-funcs

if test -n "$SENDGRID_API_KEY"
then
    echo "export SENDGRID_API_KEY=$SENDGRID_API_KEY" > /usr/local/lib/sg_key
fi

gcloud config set compute/zone $ZONE

if ! test -d /root/hooks
then
    mkdir -p /root/hooks
    hooks=$(gce_attribute hooks)
    if test -n "$hooks"
    then
	gsutil cp $hooks /run/hooks.tar.gz
	if test -f /run/hooks.tar.gz
	then
	    tar -C /root/hooks -xzf /run/hooks.tar.gz
	    rm /run/hooks.tar.gz
	fi
    fi
fi

kexec=$(gce_attribute kexec)
if grep -q fstestcfg /proc/cmdline; then exit 0; fi

kopt=$(gce_attribute kopt | sed -e 's/:/ /')
mem=$(gce_attribute mem)
cpus=$(gce_attribute nr_cpus)
mount_opts=$(gce_attribute mount_opts)
fstestcfg=$(gce_attribute fstestcfg)
fstestset=$(gce_attribute fstestset)
fstestexc=$(gce_attribute fstestexc)
fstestopt=$(gce_attribute fstestopt)
fstesttz=$(gce_attribute fstesttz)
fstesttyp=$(gce_attribute fstesttyp)
fstestapi=$(gce_attribute fstestapi)
fsteststr=$(gce_attribute fsteststr)
tarxfstests=$(gce_attribute tarxfstests)
tarfiles=$(gce_attribute tarfiles)
tarmodules=$(gce_attribute tarmodules)
nfssrv=$(gce_attribute nfssrv)

if test -n "$tarxfstests" ; then
    gsutil cp "$tarxfstests" /run/xfstests.tar.gz
    rm -rf /root/xfstests
    tar -C /root -xzf /run/xfstests.tar.gz
    rm /run/xfstests.tar.gz
fi

if test -n "$tarfiles" ; then
    gsutil cp "$tarfiles" /run/files.tar.gz
    tar -C / -xzf /run/files.tar.gz
    rm /run/files.tar.gz
    sed -e 's;/dev/;/dev/mapper/xt-;' < /root/test-config > /tmp/test-config
    echo "export RUN_ON_GCE=yes" >> /tmp/test-config
    mv /tmp/test-config /root/test-config
    rm -f /root/*~
    chown root:root /root
fi

if test -n "$tarmodules" ; then
    gsutil cp "$tarmodules" /run/modules.tar.xz
    tar -C / -xJf /run/modules.tar.xz
    rm /run/modules.tar.xz
    depmod -a
fi

if test -z "$kexec"
then
    /usr/local/lib/gce-add-metadata "kernel_version=$(uname -a)" &
    cat >> /run/test-env <<EOF
# Appended by gce-kexec
FSTESTCFG="${fstestcfg//,/ }"
FSTESTSET="${fstestset//,/ }"
FSTESTOPT="${fstestopt//,/ }"
FSTESTTYP="$fstesttyp"
FSTESTAPI="${fstestapi//./ }"
FSTESTSTR="${fsteststr//,/ }"
timezone="$fstesttz"
MNTOPTS="$mount_opts"
FSTESTEXC="${fstestexc//,/ }"
NFSSRV="${$nfssrv}"
EOF
    exit 0
fi

if ! test -f /root/bzImage
then
    if ! gsutil cp $kexec /root/bzImage
    then
	logger "Couldn't find $kexec"
	exit 1
    fi
    sync
fi

if test -n "$fstesttz" -a -f /usr/share/zoneinfo/$fstesttz
then
    ln -sf /usr/share/zoneinfo/$fstesttz /etc/localtime
    echo $fstesttz > /etc/timezone
fi

if test -n "$mem"
then
    kopt="$kopt mem=${mem}M"
fi

if test -n "$cpus"
then
    kopt="$kopt maxcpus=$cpus"
fi

if test -n "$mount_opts"
then
    kopt="$kopt mount_opts=$mount_opts"
fi

run_hooks kexec
/usr/local/lib/gce-logger kexec to test kernel
systemctl stop rsyslog.service
sync
kexec /root/bzImage --command-line="root=/dev/sda1 ro console=ttyS0,38400n8 elevator=noop net.ifnames=0 biosdevname=0 console=ttyS0 $kopt fstestcfg=$fstestcfg fstestset=$fstestset fstestexc=$fstestexc fstestopt=$fstestopt fstesttyp=$fstesttyp fstestapi=$fstestapi fsteststr=$fsteststr nfssrv=$nfssrv"
